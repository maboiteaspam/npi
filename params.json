{"name":"Npi","tagline":"node project init","body":"# npi\r\n\r\nNode Project Init. Way more than `npm init -y`.\r\n\r\n## Install\r\n\r\n    npm i @maboiteaspam/npi -g\r\n\r\n## Usage\r\n\r\n```bash\r\nnpi\r\n\r\n Init a node project.\r\n\r\n Usage\r\n   npi [module1 module2]\r\n   npi [opts] -- [module1 module2]\r\n\r\n   npi --explicit           Run explicit-deps\r\n   npi --config             Show config\r\n   npi --add [module]       Add workflow\r\n   npi --default [module]   Set default workflow\r\n\r\n Options\r\n   -v                       verbose\r\n   -h                       show help\r\n   -w                       Workflow to use\r\n   --explicit               Invoke rvagg/node-explicit --yes.\r\n   --add                    Add new init workflow.\r\n   --default                Set the default workflow\r\n\r\n Examples\r\n   npi debug minimist multiline\r\n   npi -v -- debug minimist multiline\r\n   npi -w @maboiteaspam/npi-regular -- debug minimist multiline\r\n\r\n   npi --explicit\r\n   npi -h\r\n```\r\n\r\n## Workflow\r\n\r\nWorkflow is the stream that implement the initialization of the package.\r\n\r\nCurrently see `npi-regular` workflow.\r\n\r\nWorkflow are expected to create a\r\nminimal environment to get on work,\r\ncooked just for the user.\r\n\r\n```\r\n - node_modules/\r\n - .gitignore\r\n - index.js\r\n - playground.js\r\n - package.json\r\n - README.md\r\n```\r\n\r\nWorkflow must perform any action as automated as possible,\r\notherwise query for user input at runtime.\r\n\r\nWorkflow describes your habits, preferences,\r\nenvironments requirements,\r\nwhen its about a node package setup.\r\n\r\n## Build your own\r\n\r\nPlease consider visiting\r\n\r\n- https://github.com/maboiteaspam/npi-regular\r\n- https://github.com/maboiteaspam/npi-utils\r\n\r\n#### workflow signature\r\n\r\n`workflow` are node module which exports a `function(pkg, argv, conf)`,\r\nwhich must return a stream `bubbler`\r\n(one of `stream-messenger`, `stream-router`, `bubbler`, `bubbled`).\r\n\r\nA simple `workflow` would be\r\n\r\n```js\r\n    var messageRouter = require('stream-message-router')\r\n    var npi = messageRouter('npi');\r\n```\r\n\r\nIt is then possible to enhance the `workflow` in such way,\r\n\r\n```js\r\n    var trimT         = require('@maboiteaspam/npi-utils/trim.js')\r\n    var spawn         = require('@maboiteaspam/npi-utils/spawn')\r\n    var bubble        = require('@maboiteaspam/npi-utils/bubble')\r\n\r\n    npi\r\n    .pipe(trimT(templateVars, ['author']))\r\n    .pipe(spawn('npm', function (){\r\n        return ['init', '--scope='+templateVars.author, '--yes']\r\n    }))\r\n    .pipe(bubble('message', {message: 'file', 'body':'package.json'}))\r\n```\r\n\r\nthe latter, the workflow is connected to npi `main` stream, and invoked when necessary.\r\n\r\n## About the code\r\n\r\nTLDR: It use a workflow stream `npi` on which transforms are piped to.\r\n\r\nThey execute in sequence, time management is totally left to the underlying pipe system.\r\n\r\nTo communicate with the user along the commands, `npi` will bubble events to the `source` stream.\r\n\r\n`msgListener` a dedicated stream is setup to listen `npi` stream  `message event`s.\r\n\r\nIt then route chunks to specific transforms which are responsible to display an output given the type of message.\r\n\r\nThe type of events you may encounter are\r\n\r\nWhen a file is created : `{message: 'file', body:'path'}`\r\n\r\nWhen a process spawns : `{message: 'spawn', body:child_process}`\r\n\r\nWhen a process has spawned (child_process.close event) : `{message: 'spawned', body:child_process}`\r\n\r\n\r\nMay this drawing you to jump in the code,\r\n\r\n```js\r\n       process\r\n-▶-stdin-▶|                       (1)\r\n          | var npi = stream()    /\r\n          |    .pipe() ▼         /\r\n          |       route 'npi' -----▼\r\n          |                        |\r\n          |      (3)               |\r\n          |      /                 |\r\n          |  npi emit()◀--|        |\r\n          |   ▼           |        |\r\n          |  down         |        |\r\n          |   ▼           ▲        |\r\n          |   |    bubble()◀◀|     |-▶fnT1 (spawn npm)\r\n          |   |              |           ▼ push()      (2)\r\n          |   |              ▲           ▼            /\r\n          |   |       bubble()◀◀|     fnT2 start bubble() ▶-|\r\n          |   |                 |        ▼                  |\r\n          |   |                 |        ▼  {type: 'file'   |\r\n          |   |                 |------------body: 'index'}-|\r\n          |   |                          ▼ push()\r\n          |   |                       fnT3 (inquire)\r\n          |   |                          ▼ push()\r\n          |   |                       fnT4 (git commit)\r\n          |   |                          ▼ push()\r\n          |   |          (4)          (end of npi)\r\n          |   |            \\\r\n          |   ▶-▶ var msgListener = eventStream('message', npi);\r\n          |         .pipe() ▼\r\n          |            route 'file' -▼\r\n          |                          |-▶fnT1 (extract body)  (5)\r\n          |                                 ▼ push()        /\r\n          |                             fnT2 (log to console)\r\n          |                                 ▼ push()\r\n          |                             (end of msgListener)\r\n          |     msgListener\r\n          |         .pipe() ▼                            (5 bis)\r\n          |            route 'spawn' -▼                 /\r\n          |                           |-▶fnT1 (pipe to process)\r\n          |                                 ▼ push()\r\n          |                              (end of msgListener)\r\n◀-stdout-◀|\r\n   (end of process)\r\n```\r\n\r\n\r\n## Read more\r\n\r\n- https://github.com/maboiteaspam/npi-regular\r\n- https://github.com/maboiteaspam/npi-utils\r\n- https://github.com/maboiteaspam/stream-messenger\r\n- https://github.com/maboiteaspam/stream-message-router\r\n- https://github.com/maboiteaspam/flower\r\n- https://github.com/maboiteaspam/bubbler\r\n- https://github.com/maboiteaspam/bubbled\r\n- https://github.com/maboiteaspam/event-stream-writer\r\n- https://github.com/maboiteaspam/set-verbosity\r\n- https://github.com/maboiteaspam/show-help\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}