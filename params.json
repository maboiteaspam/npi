{"name":"Npi","tagline":"node project init","body":"# npi\r\n\r\nNode Project Init\r\n\r\n## Install\r\n\r\n    npm i maboiteaspam/npi -g\r\n\r\n## Usage\r\n\r\n    npi [--verbose|-v] [-- module1 module2]\r\n    npi [module1 module2]\r\n\r\n## Flow\r\n\r\n```js\r\nvar ignored = [\r\n  'node_modules/',\r\n  'npm-debug.log'\r\n];\r\n\r\nvar templateVars = {\r\n  name        : path.basename(process.cwd()),\r\n  description : \"Description of the module.\",\r\n  ignored     : ignored,\r\n  modules     : argv['_']\r\n};\r\n\r\nnpi\r\n  // npm init\r\n  .pipe(spawn('npm', ['init', '--yes'],\r\n    {stdio: 'inherit'}))\r\n  .pipe(bubble('message',\r\n    {message: 'file', 'body':'package.json'}))\r\n\r\n  // gather user input\r\n  .pipe(input('Input the module\\'s description :',\r\n    templateVars, 'description'))\r\n  .pipe(input('Input the module\\'s keywords :',\r\n    templateVars, 'keywords'))\r\n  .pipe(choose('Please choose a licence :',\r\n    templateVars, 'licence'))\r\n  .pipe( !argv['_'].length\r\n    ? input('Input the module\\'s dependencies :',\r\n    templateVars, 'dependencies')\r\n    : streamMsger('skip') )\r\n  .pipe(input('Input the module\\'s devDep\\'s :',\r\n    templateVars, 'devDependencies'))\r\n\r\n   //generate templates\r\n  .pipe(genTemplate(tplPath, 'README.md'    , templateVars))\r\n  .pipe(genTemplate(tplPath, 'playground.js', templateVars))\r\n  .pipe(genTemplate(tplPath, 'index.js'     , templateVars))\r\n  .pipe(genTemplate(tplPath, '.gitignore'   , templateVars))\r\n\r\n  // npm module install\r\n  .pipe(spawn('npm', function (){\r\n    var modules = templateVars.dependencies\r\n      .replace(/^\\s+/, '').replace(/\\s+$/, '').split(/\\s/);\r\n    if (!modules.length || !modules[0].length) return false;\r\n    return ['i'].concat(modules).concat('--save');\r\n  }, {stdio: 'inherit'}))\r\n  .pipe(spawn('npm', function (){\r\n    var modules = templateVars.devDependencies\r\n      .replace(/^\\s+/, '').replace(/\\s+$/, '').split(/\\s/);\r\n    if (!modules.length || !modules[0].length) return false;\r\n    return ['i'].concat(modules).concat('--save-dev');\r\n  }, {stdio: 'inherit'}))\r\n\r\n  // fix package.json file\r\n  .pipe(updatePkg('package.json', function () {\r\n    return {\r\n      licence         : templateVars.licence,\r\n      description     : templateVars.description,\r\n      keywords        : templateVars.keywords.split(/\\s/)\r\n    };\r\n  }))\r\n\r\n  // git init, add, commit\r\n  .pipe(spawn('git', ['init'],\r\n    {stdio: 'inherit'}))\r\n  .pipe(spawn('git', function (){\r\n    return ['add'].concat(files)\r\n  }, {stdio: 'inherit'}))\r\n  .pipe(spawn('git', ['commit', '-m', 'npi:'+pkg.version],\r\n    {stdio: 'inherit'}))\r\n;\r\n```\r\n\r\n## Pipe\r\n\r\nI don t know if that helps :D\r\n\r\n```js\r\n       process\r\n-▶-stdin-▶|                       (1)\r\n          | var npi = stream()    /\r\n          |    .pipe() ▼         /\r\n          |       route 'npi' -----▼\r\n          |                        |\r\n          |      (3)               |\r\n          |      /                 |\r\n          |  npi emit()◀--|        |\r\n          |   ▼           |        |\r\n          |  down         |        |\r\n          |   ▼           ▲        |\r\n          |   |    bubble()◀◀|     |-▶fnT1 (spawn npm)\r\n          |   |              |           ▼ push()      (2)\r\n          |   |              ▲           ▼            /\r\n          |   |       bubble()◀◀|     fnT2 start bubble() ▶-|\r\n          |   |                 |        ▼                  |\r\n          |   |                 |        ▼  {type: 'file'   |\r\n          |   |                 |------------body: 'index'}-|\r\n          |   |                          ▼ push()\r\n          |   |                       fnT3 (inquire)\r\n          |   |                          ▼ push()\r\n          |   |                       fnT4 (git commit)\r\n          |   |                          ▼ push()\r\n          |   |          (4)          (end of npi)\r\n          |   |            \\\r\n          |   ▶-▶ var msgListener = eventStream('message', npi);\r\n          |         .pipe() ▼\r\n          |            route 'file' -▼\r\n          |                          |-▶fnT1 (extract body)  (5)\r\n          |                                 ▼ push()        /\r\n          |                             fnT2 (log to console)\r\n          |                                 ▼ push()\r\n          |                             (end of msgListener)\r\n          |     msgListener\r\n          |         .pipe() ▼                            (5 bis)\r\n          |            route 'spawn' -▼                 /\r\n          |                           |-▶fnT1 (pipe to process)\r\n          |                                 ▼ push()\r\n          |                              (end of msgListener)\r\n◀-stdout-◀|\r\n   (end of process)\r\n```\r\n\r\n\r\n## Read more\r\n\r\n- https://github.com/maboiteaspam/stream-messenger\r\n- https://github.com/maboiteaspam/stream-message-router\r\n- https://github.com/maboiteaspam/flower\r\n- https://github.com/maboiteaspam/bubbler\r\n- https://github.com/maboiteaspam/bubbled\r\n- https://github.com/maboiteaspam/event-stream-writer\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}